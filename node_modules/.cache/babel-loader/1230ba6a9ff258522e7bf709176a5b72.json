{"ast":null,"code":"import { __rest } from 'tslib';\nimport { dispatchViewEvent } from '../utils/events.es.js';\nimport { inView as inView$1 } from '../../gestures/in-view.es.js';\nconst inView = {\n  isActive: options => Boolean(options.inView),\n  subscribe: (element, _ref, _ref2) => {\n    let {\n      enable,\n      disable\n    } = _ref;\n    let {\n      inViewOptions = {}\n    } = _ref2;\n\n    const {\n      once\n    } = inViewOptions,\n          viewOptions = __rest(inViewOptions, [\"once\"]);\n\n    return inView$1(element, enterEntry => {\n      enable();\n      dispatchViewEvent(element, \"viewenter\", enterEntry);\n\n      if (!once) {\n        return leaveEntry => {\n          disable();\n          dispatchViewEvent(element, \"viewleave\", leaveEntry);\n        };\n      }\n    }, viewOptions);\n  }\n};\nexport { inView };","map":{"version":3,"sources":["C:/Users/om/OneDrive/Desktop/My_PortFolio/node_modules/@motionone/dom/dist/state/gestures/in-view.es.js"],"names":["__rest","dispatchViewEvent","inView","inView$1","isActive","options","Boolean","subscribe","element","enable","disable","inViewOptions","once","viewOptions","enterEntry","leaveEntry"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,MAAM,IAAIC,QAAnB,QAAmC,8BAAnC;AAEA,MAAMD,MAAM,GAAG;AACXE,EAAAA,QAAQ,EAAGC,OAAD,IAAaC,OAAO,CAACD,OAAO,CAACH,MAAT,CADnB;AAEXK,EAAAA,SAAS,EAAE,CAACC,OAAD,kBAA0D;AAAA,QAAhD;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAgD;AAAA,QAA3B;AAAEC,MAAAA,aAAa,GAAG;AAAlB,KAA2B;;AACjE,UAAM;AAAEC,MAAAA;AAAF,QAAWD,aAAjB;AAAA,UAAgCE,WAAW,GAAGb,MAAM,CAACW,aAAD,EAAgB,CAAC,MAAD,CAAhB,CAApD;;AACA,WAAOR,QAAQ,CAACK,OAAD,EAAWM,UAAD,IAAgB;AACrCL,MAAAA,MAAM;AACNR,MAAAA,iBAAiB,CAACO,OAAD,EAAU,WAAV,EAAuBM,UAAvB,CAAjB;;AACA,UAAI,CAACF,IAAL,EAAW;AACP,eAAQG,UAAD,IAAgB;AACnBL,UAAAA,OAAO;AACPT,UAAAA,iBAAiB,CAACO,OAAD,EAAU,WAAV,EAAuBO,UAAvB,CAAjB;AACH,SAHD;AAIH;AACJ,KATc,EASZF,WATY,CAAf;AAUH;AAdU,CAAf;AAiBA,SAASX,MAAT","sourcesContent":["import { __rest } from 'tslib';\r\nimport { dispatchViewEvent } from '../utils/events.es.js';\r\nimport { inView as inView$1 } from '../../gestures/in-view.es.js';\r\n\r\nconst inView = {\r\n    isActive: (options) => Boolean(options.inView),\r\n    subscribe: (element, { enable, disable }, { inViewOptions = {} }) => {\r\n        const { once } = inViewOptions, viewOptions = __rest(inViewOptions, [\"once\"]);\r\n        return inView$1(element, (enterEntry) => {\r\n            enable();\r\n            dispatchViewEvent(element, \"viewenter\", enterEntry);\r\n            if (!once) {\r\n                return (leaveEntry) => {\r\n                    disable();\r\n                    dispatchViewEvent(element, \"viewleave\", leaveEntry);\r\n                };\r\n            }\r\n        }, viewOptions);\r\n    },\r\n};\r\n\r\nexport { inView };\r\n"]},"metadata":{},"sourceType":"module"}