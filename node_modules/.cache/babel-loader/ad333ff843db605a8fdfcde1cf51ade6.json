{"ast":null,"code":"import { isNumber } from '@motionone/utils';\nimport { getEasingFunction } from '@motionone/animation';\n\nfunction stagger() {\n  let duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.1;\n  let {\n    start = 0,\n    from = 0,\n    easing\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return (i, total) => {\n    const fromIndex = isNumber(from) ? from : getFromIndex(from, total);\n    const distance = Math.abs(fromIndex - i);\n    let delay = duration * distance;\n\n    if (easing) {\n      const maxDelay = total * duration;\n      const easingFunction = getEasingFunction(easing);\n      delay = easingFunction(delay / maxDelay) * maxDelay;\n    }\n\n    return start + delay;\n  };\n}\n\nfunction getFromIndex(from, total) {\n  if (from === \"first\") {\n    return 0;\n  } else {\n    const lastIndex = total - 1;\n    return from === \"last\" ? lastIndex : lastIndex / 2;\n  }\n}\n\nfunction resolveOption(option, i, total) {\n  return typeof option === \"function\" ? option(i, total) : option;\n}\n\nexport { getFromIndex, resolveOption, stagger };","map":{"version":3,"sources":["C:/Users/om/OneDrive/Desktop/My_PortFolio/node_modules/@motionone/dom/dist/utils/stagger.es.js"],"names":["isNumber","getEasingFunction","stagger","duration","start","from","easing","i","total","fromIndex","getFromIndex","distance","Math","abs","delay","maxDelay","easingFunction","lastIndex","resolveOption","option"],"mappings":"AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;;AAEA,SAASC,OAAT,GAAuE;AAAA,MAAtDC,QAAsD,uEAA3C,GAA2C;AAAA,MAAtC;AAAEC,IAAAA,KAAK,GAAG,CAAV;AAAaC,IAAAA,IAAI,GAAG,CAApB;AAAuBC,IAAAA;AAAvB,GAAsC,uEAAJ,EAAI;AACnE,SAAO,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACjB,UAAMC,SAAS,GAAGT,QAAQ,CAACK,IAAD,CAAR,GAAiBA,IAAjB,GAAwBK,YAAY,CAACL,IAAD,EAAOG,KAAP,CAAtD;AACA,UAAMG,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASJ,SAAS,GAAGF,CAArB,CAAjB;AACA,QAAIO,KAAK,GAAGX,QAAQ,GAAGQ,QAAvB;;AACA,QAAIL,MAAJ,EAAY;AACR,YAAMS,QAAQ,GAAGP,KAAK,GAAGL,QAAzB;AACA,YAAMa,cAAc,GAAGf,iBAAiB,CAACK,MAAD,CAAxC;AACAQ,MAAAA,KAAK,GAAGE,cAAc,CAACF,KAAK,GAAGC,QAAT,CAAd,GAAmCA,QAA3C;AACH;;AACD,WAAOX,KAAK,GAAGU,KAAf;AACH,GAVD;AAWH;;AACD,SAASJ,YAAT,CAAsBL,IAAtB,EAA4BG,KAA5B,EAAmC;AAC/B,MAAIH,IAAI,KAAK,OAAb,EAAsB;AAClB,WAAO,CAAP;AACH,GAFD,MAGK;AACD,UAAMY,SAAS,GAAGT,KAAK,GAAG,CAA1B;AACA,WAAOH,IAAI,KAAK,MAAT,GAAkBY,SAAlB,GAA8BA,SAAS,GAAG,CAAjD;AACH;AACJ;;AACD,SAASC,aAAT,CAAuBC,MAAvB,EAA+BZ,CAA/B,EAAkCC,KAAlC,EAAyC;AACrC,SAAO,OAAOW,MAAP,KAAkB,UAAlB,GACDA,MAAM,CAACZ,CAAD,EAAIC,KAAJ,CADL,GAEDW,MAFN;AAGH;;AAED,SAAST,YAAT,EAAuBQ,aAAvB,EAAsChB,OAAtC","sourcesContent":["import { isNumber } from '@motionone/utils';\r\nimport { getEasingFunction } from '@motionone/animation';\r\n\r\nfunction stagger(duration = 0.1, { start = 0, from = 0, easing } = {}) {\r\n    return (i, total) => {\r\n        const fromIndex = isNumber(from) ? from : getFromIndex(from, total);\r\n        const distance = Math.abs(fromIndex - i);\r\n        let delay = duration * distance;\r\n        if (easing) {\r\n            const maxDelay = total * duration;\r\n            const easingFunction = getEasingFunction(easing);\r\n            delay = easingFunction(delay / maxDelay) * maxDelay;\r\n        }\r\n        return start + delay;\r\n    };\r\n}\r\nfunction getFromIndex(from, total) {\r\n    if (from === \"first\") {\r\n        return 0;\r\n    }\r\n    else {\r\n        const lastIndex = total - 1;\r\n        return from === \"last\" ? lastIndex : lastIndex / 2;\r\n    }\r\n}\r\nfunction resolveOption(option, i, total) {\r\n    return typeof option === \"function\"\r\n        ? option(i, total)\r\n        : option;\r\n}\r\n\r\nexport { getFromIndex, resolveOption, stagger };\r\n"]},"metadata":{},"sourceType":"module"}